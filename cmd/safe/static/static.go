// Code generated by "esc -o static/static.go -pkg static static/ui"; DO NOT EDIT.

package static

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	"path"
	"sync"
	"time"
)

type _escLocalFS struct{}

var _escLocal _escLocalFS

type _escStaticFS struct{}

var _escStatic _escStaticFS

type _escDirectory struct {
	fs   http.FileSystem
	name string
}

type _escFile struct {
	compressed string
	size       int64
	modtime    int64
	local      string
	isDir      bool

	once sync.Once
	data []byte
	name string
}

func (_escLocalFS) Open(name string) (http.File, error) {
	f, present := _escData[path.Clean(name)]
	if !present {
		return nil, os.ErrNotExist
	}
	return os.Open(f.local)
}

func (_escStaticFS) prepare(name string) (*_escFile, error) {
	f, present := _escData[path.Clean(name)]
	if !present {
		return nil, os.ErrNotExist
	}
	var err error
	f.once.Do(func() {
		f.name = path.Base(name)
		if f.size == 0 {
			return
		}
		var gr *gzip.Reader
		b64 := base64.NewDecoder(base64.StdEncoding, bytes.NewBufferString(f.compressed))
		gr, err = gzip.NewReader(b64)
		if err != nil {
			return
		}
		f.data, err = ioutil.ReadAll(gr)
	})
	if err != nil {
		return nil, err
	}
	return f, nil
}

func (fs _escStaticFS) Open(name string) (http.File, error) {
	f, err := fs.prepare(name)
	if err != nil {
		return nil, err
	}
	return f.File()
}

func (dir _escDirectory) Open(name string) (http.File, error) {
	return dir.fs.Open(dir.name + name)
}

func (f *_escFile) File() (http.File, error) {
	type httpFile struct {
		*bytes.Reader
		*_escFile
	}
	return &httpFile{
		Reader:   bytes.NewReader(f.data),
		_escFile: f,
	}, nil
}

func (f *_escFile) Close() error {
	return nil
}

func (f *_escFile) Readdir(count int) ([]os.FileInfo, error) {
	if !f.isDir {
		return nil, fmt.Errorf(" escFile.Readdir: '%s' is not directory", f.name)
	}

	fis, ok := _escDirs[f.local]
	if !ok {
		return nil, fmt.Errorf(" escFile.Readdir: '%s' is directory, but we have no info about content of this dir, local=%s", f.name, f.local)
	}
	limit := count
	if count <= 0 || limit > len(fis) {
		limit = len(fis)
	}

	if len(fis) == 0 && count > 0 {
		return nil, io.EOF
	}

	return []os.FileInfo(fis[0:limit]), nil
}

func (f *_escFile) Stat() (os.FileInfo, error) {
	return f, nil
}

func (f *_escFile) Name() string {
	return f.name
}

func (f *_escFile) Size() int64 {
	return f.size
}

func (f *_escFile) Mode() os.FileMode {
	return 0
}

func (f *_escFile) ModTime() time.Time {
	return time.Unix(f.modtime, 0)
}

func (f *_escFile) IsDir() bool {
	return f.isDir
}

func (f *_escFile) Sys() interface{} {
	return f
}

// FS returns a http.Filesystem for the embedded assets. If useLocal is true,
// the filesystem's contents are instead used.
func FS(useLocal bool) http.FileSystem {
	if useLocal {
		return _escLocal
	}
	return _escStatic
}

// Dir returns a http.Filesystem for the embedded assets on a given prefix dir.
// If useLocal is true, the filesystem's contents are instead used.
func Dir(useLocal bool, name string) http.FileSystem {
	if useLocal {
		return _escDirectory{fs: _escLocal, name: name}
	}
	return _escDirectory{fs: _escStatic, name: name}
}

// FSByte returns the named file from the embedded assets. If useLocal is
// true, the filesystem's contents are instead used.
func FSByte(useLocal bool, name string) ([]byte, error) {
	if useLocal {
		f, err := _escLocal.Open(name)
		if err != nil {
			return nil, err
		}
		b, err := ioutil.ReadAll(f)
		_ = f.Close()
		return b, err
	}
	f, err := _escStatic.prepare(name)
	if err != nil {
		return nil, err
	}
	return f.data, nil
}

// FSMustByte is the same as FSByte, but panics if name is not present.
func FSMustByte(useLocal bool, name string) []byte {
	b, err := FSByte(useLocal, name)
	if err != nil {
		panic(err)
	}
	return b
}

// FSString is the string version of FSByte.
func FSString(useLocal bool, name string) (string, error) {
	b, err := FSByte(useLocal, name)
	return string(b), err
}

// FSMustString is the string version of FSMustByte.
func FSMustString(useLocal bool, name string) string {
	return string(FSMustByte(useLocal, name))
}

var _escData = map[string]*_escFile{

	"/static/ui/app.ui": {
		name:    "app.ui",
		local:   "static/ui/app.ui",
		size:    8131,
		modtime: 1542360317,
		compressed: `
H4sIAAAAAAAC/+xZTW/jNhC951ewvBay8gFs92Bp0QW628Oil6TtURiRY4k1TarkyI776wvJztqOJetr
s0jQ3hKTQ/HNe2/IkeYfHleardF5ZU3Eb2bXnKERViqTRfz3h0/Be/4hvpr/EATsMxp0QCjZRlHOMg0S
2d3s9nZ2w4IgvporQ+gWIDC+Ymzu8O9SOfRMqzTiGS1/5IcH3c1ur3lYz7PpXyiICQ3eR/wzLf9URtoN
Z0pGHIqCV7MYmxfOFuhoywysMOJr5VWqkccPrsR5+DTaPFmASRZWlJ7Hn0D7zvk5+Kf5fZbf1DtOCusV
KWt4LLBKRVeYxAWUmpKNkpTz+P31dd+IHFWWE4/fdYdUUBx69Q8mmVNFCyCRKy13f1dLaBCYWy3RhfsJ
4dGMZ7PPCPxoH/nT6EDixpDXFGOdQkOwY2ONjpQA3Rh4gqUZz2+WMLV2uZMkQZZo5YkfB42A2QF1SBga
SDUmhS3KoiPyDG4fCidhHEvpZGovYx6CexL2qfib4lfgMmUSjYuqCIyMdvsaMjKcbDE+OLVEdtUnvpW8
ZgLvEZzIfzHktju7ruuC6eufeds6E+mdYOVvx3LTCoVTK3DbRAlrkuonHqNUFCyUkYHfrlKrlZi8MAhS
ayCo89VLz51LejTVWbqetODhFEsIH4kzcmC83u004lv0PN7phQGrdcJms9ms17O8ygzo/ZN26gpEDiZD
yVkORmp0z8TH/AaKAmXEjeVhq6TDnaZbxwsQS2Wy/nnAxwKMnJDIhdJ6vIoPt6Lr7vB5eBHeyTVkaqn4
WBJZc1wlQMoBJUJDirpRVD9LOSZTr6HmOBSo1uiT/VXzu1avE1MJrcSywU0VSf95K928pJUu5e1yzibl
qzlXo0J715wLSWpN0JD75IND/EPh5rjKNDQPL33J7BVew2J1E29AB/W/1dmmUexy2buyVqjvv8aFb1uA
Y1Lf26jD9decm8bJe0ZpW2DVtqa8u+/7Up9pr7Tzaz9wC8iQXUh1m6DaxfT82QRp0qsgtTB6gaDzTZ29
fvmf5gPNty9Jc0/jvlV1QF2RA0/g6K3LpP/9csL7j/7avIfF5e0DkVNpSegbD4Kvw0+HjzUUSPSCszXo
EiP+K+o1khLANvXr3+j27id2867pfJ2H7U971bXwVKdoZA+VHvdxIGVCkPEpTHZ0by8h/qGhw7u0b+iB
3u//prz76+oFCbLEl+lKUUcz+Crl3rSp5g2NutAOv8gObqAasJ7h7PNt5di82ma27Pqu0u7bL3V4X4Tf
8/vMMLuOO+hGGnyUuccau8vUewG0G/oN+eZmrG9OMR4NHgbm4dGn9n8DAAD///UfszDDHwAA
`,
	},

	"/static/ui/app.ui~": {
		name:    "app.ui~",
		local:   "static/ui/app.ui~",
		size:    8131,
		modtime: 1542317621,
		compressed: `
H4sIAAAAAAAC/+xZTW/jNhC9769geS1k5aNIe7C06ALd7WHRS9L2KIzIscSGJlVyZMf99YWkZG3HkvW1
WSRob4nJofjmvTfkSMv3D2vNNui8sibil4sLztAIK5XJIv773cfgJ/4+frf8LgjYJzTogFCyraKcZRok
suvF1dXikgVB/G6pDKFbgcD4HWNLh3+XyqFnWqURz+j+e75/0PXi6oKH9Tyb/oWCmNDgfcQ/0f2fyki7
5UzJiENR8GoWY8vC2QId7ZiBNUZ8o7xKNfL4zpW4DJ9G2ycLMMnKitLz+CNo3zs/B/80f8jy23rHSWG9
ImUNjwVWqegLk7iCUlOyVZJyHt9cXAyNyFFlOfH4h/6QCopDr/7BJHOq6AAkcqVl83e1hAaBudUSXfg4
ITyY8Wz2CYEf7AN/Gh1J3BTy2mKsU2gIGjY26EgJ0K2BR1ja8fxmCVNr7xtJEmSJVp74YdAEmD1Qx4Sh
gVRjUtiiLHoiT+AOoXAWxqmUzqb2POYxuGdhn4u/LX4NLlMm0bgiHt9MjHZNDZkaTraYHpxaIrseEt9J
XjuBtwhO5L8YcrvGrpu6YPr6Z961zkx6Z1j567HctkLh1BrcLlHCmqT6iccoFQUrZWTgd+vUaiVmLwyC
1AYI6nwN0nPvkh5NdZZuZi24P8USwgfijBwYr5udRnyHnseNXhiwWidssVgsBj3Lq8yAfnxSo65A5GAy
lJzlYKRG90x8zG+hKFBG3Fgedko6bDTdOV6AuFcmG54HfCjAyBmJXCmtp6t4fyu66A9fhmfhHV1D5paK
DyWRNYdVAqQcUSI0pKhbRfWzlFMy9RpqjkOBaoM+ebxqftPqdWQqoZW4b3FTRdJ/3kqXL2mlc3k7n7NZ
+WrP1aTQwTXnTJI6EzTmPnnnEP9QuD2sMi3Nw0tfMgeF17BY3cQb0EH9b3W2aRRNLgdX1gr17Ze48G0L
cErqBxt1vP7ac9M6+ZFR2hVYta0p7+/7Ptdn2ivt/LoP3AIyZGdS3SWobjE9fzZBmgwqSB2MniHodFMn
r1/+p3lP89VL0jzQuG9VHVBX5MATOHrrMhl+v5zx/mO4Nm9hdX77QORUWhL61oPgy/DT4WMNBRK94GwD
usSI/4p6g6QEsG39+je6uv6RXd60na/LsPtpr7oWHusUjRyg0sM+DqRMCDI+h8me7u0lxD82dHyX9hU9
MPj935x3f329IEGW+DJdK+ppBl+l3Ns21b6hSRfa8RfZ0Q1UC9YTnEO+rRyaV9vMln3fVbp9+7kOH4rw
W36fGWfXaQfdRINPMvdUY/eZ+lEA3YZ+Q765nOqbY4wHg/uBZXjwqf3fAAAA//+BKOZtwx8AAA==
`,
	},

	"/static/ui/sign.ui": {
		name:    "sign.ui",
		local:   "static/ui/sign.ui",
		size:    10185,
		modtime: 1542503992,
		compressed: `
H4sIAAAAAAAC/+xaS3PbNhC++1ds0Us7jZ5u0kxGUqavpIceOm165qyAFYkaAlhgKVn99R1KtiVHlEiI
jh3bySk29ltgXx8/gh69vZwbWJAP2tmxGHT7AshKp7RNx+LvD+86r8Xbydnoq04H3pMlj0wKlpozSA0q
gvPucNgdQKczORtpy+RnKGlyBjDy9G+hPQUwejoWKV98J7YbnXeHfdFb27npPyQZpMEQxuI9X/yi0bhU
gFZjEXRqRWkGMMq9y8nzCizOaSwk2mTmZBHE5B2aQKPetUG1Pa9yEpPc5UVeZ+op6P9waqih67lTaMTk
gy9qTZfaKrdMchc0a2fFRFKZtY6znRw9Wa5zoCiwd6ukrEGygTTbuYw/yXRprtYZrt/JEB/Lgsy0UZv/
l2iDkjJnFPnelUFvx2JjDesesWg66x/HYjF1l+LGx14v/LSzGt8ClbVCn2qbGJqxmLyKQHidZpEQdnkc
YOqY3bwhxnlNlnHTRgvyrCWaJsCQo9Q2FZNhpXV1oVCWGyXoCXcqUlmzgtnZ25U7tXpVOIMrV3ASeFW2
Jll1EHirQesOvCWcRKKVZMTHyKqjTMkIYI82GFwPy1isKIjJz2sXh05W5Wuhg14PW9UwN8xjLNSTJL2g
kCiaYWG4gYcyQWiutzZaXpASkKFVhvzt/EFYYp6TGgvrRG+vDr1NIfZ+n6O80DatPz1d5mhVfNQzbUw8
akvZ/cOwUa/y9LeYsHV7hmI619yqPf9au3im7XmVv6fanoO7aM+q8KtDPxR2FKdvYo6C1M5jRbB7ge7P
YJ0GOXk27urxVy9gThQxJwmZU8VMK0ETw56/rznwfvjtaB2rsBma9QtOYPRRbNyoLg1qMxjGgI88T3AW
FXjQNjWUGG0pmTvVJO3I7PW0YAr7i7vL14ziLHcUBSlggaagsfiNzILKnoIllWMwHp7/AC/7+9Rf8sTh
3e7uwRDdLo9MuDzp0atlt7gB+gNDyDOPgd48wBQMhs9oCgb3OwW/WvarjXrPb4osPk/BnWFoA20u0z8C
a5sXnOSFz12ZmzJPS+fVsUI92vYbfiHh9jLmMJH+CKlzCrajBiFzhVGQ4YIAGQxhYBi8ApmhR8nkA6BV
MCVQejbTsjAM7CAtKAT4RulUc3gBYTWfOhNeALHsftt9CJJ+TlLl/J7vWNzl7v2fszPt50kUX9/VHAxe
35caiXrfOpzNON5pxT1t895KCLZNf+QF8qYHd4jsTa3z47xz9wKxjn+OcdBxHmrFRafz0cnC8QgvHeSm
2InaEZKNCOpTTlo9/AnVffiwdX9WTFovBeNo9E/q8Con4Ix2NSE7uJohWLnCg8ycltR9SIbtf2HYY6rv
tEl7xAr4+4d4T9xqYPLe+fuUvf0219j9z+bSrNKfp9S7wqobh19LKWX/6t8zeq17+Wi/TcZ82quVjPWf
Jm/HuLO4XRj1dv7g7v8AAAD//0PEI/fJJwAA
`,
	},

	"/static/ui/sign.ui~": {
		name:    "sign.ui~",
		local:   "static/ui/sign.ui~",
		size:    10128,
		modtime: 1542361353,
		compressed: `
H4sIAAAAAAAC/+xaS3PbNhC++1ds0Us7jZ5u0kxGVKavpIceOm165qyAFYkaAlhgKVn99R1KfsgRJQqi
Y8dWfLKE3QX28X38SGr09nJmYE4+aGcTMej2BZCVTmmbJeLvD+86r8Xb8dnoq04H3pMlj0wKFppzyAwq
gvPucNgdQKczPhtpy+SnKGl8BjDy9G+pPQUwepKIjC++E7cbnXeHfdFb2bnJPyQZpMEQEvGeL37RaFwm
QKtEBJ1ZUZkBjArvCvK8BIszSoREm06dLIMYv0MTaNS7Nqi352VBYly4oiyaTD0F/R9ODB0YeuYUGjH+
4MtG04W2yi3SwgXN2lkxllRVreNsp0BPlpsCKArs3TKtepCuXQ7buco/zXVlrlYVbt7JEO+rgsy1Uev/
K2+DknJnFPnelUFvw2JtDasZsWg6q4+JmE/cpbiJsTULP22sxo9Aba/QZ9qmhqYsxq8iPLzO8kgXdkWc
w8Qxu9mBPs5rsozrMZqTZy3RHOIYCpTaZmI8rLWubxTKaqMUPeFGR2p7VjI7e7dzx3avzs/g0pWcBl5W
o0lW7XS8M6BNB74lnFSilWTEx551R5mQEcAebTC4AksilhTE+OdViF0nq4s110GvwFYH5gPrGOvqSZKe
U0gVTbE0fECEqkBorrc2Wl6QEpCjVYb83fpBWGBRkEqEdaK31YfeuhFb3xcoL7TNmk9PlwVaFZ/1VBsT
73VL2f3dbqNe7envMGHr8QzlZKa51Xj+tQpxouN5Vb/nOp6D+xjPuvTrU9+VdhSnr3OOcmnEY02yW4lu
Y7BJgxyNjfu6/DULmCNFzFFC5lgx00rQxLDn7ysOfBh+29vHOt8czeoGJzD6KDY+qC8H9GYwjHHecz3B
aVTiQdvMUGq0pXTm1CFlR2avJyVT2F7cXL5mFGe5oyhIAXM0JSXiNzJzqmYKFlTBIBme/wAv+9vUX/HE
7t3u78IQPS5PTLg8a+g1slscgP7AEIrcY6A3j4CCwfCEUDB4WBT8atkv1+q9uGmy+DwFd44xWvsjZ22L
ktOi9IWrEqySXTiv9lX7yc7Q8AuTttciu9nwR8icU3CLFwi5K42CHOcEyGAIA8PgFcgcPUomHwCtggmB
0tOplqVhYAdZSSHAN0pnmsMLCMvZxJnwAohl99vuYzDtKemN8wd+UOIu1zxrXDWQ0tmp9rM0inXvCwiD
1w+lKaLumnaXM454WpFP27q3knNtyx/5GHg9gxtM9qYx+H7iuX+Z10RA+0hoPxG1IqPjCelo+beHmHaS
UyyiNuTgQQT1KZHW7P6M+j583L6fFJM2a8E4Gv2TOrwsCDinTVHIDq4wBEtXepC505K6j8mw/S8Mu0/2
HYe0JyyBv3+MG8UNEUzeO/+Qurff5ml0/7N59lUbz1PmXWnVTcCvpZSyf/V3Qjd2L5/sK8aYN3SNmrH5
DePdHDcWbxdGvY3fzf0fAAD//wTI1HiQJwAA
`,
	},

	"/static/ui/tag.ui": {
		name:    "tag.ui",
		local:   "static/ui/tag.ui",
		size:    5451,
		modtime: 1542377436,
		compressed: `
H4sIAAAAAAAC/+RYTXPjNgy951ew6LGj2FZm2k7H0s70Y7eHTi/dnjUQCctsaFIlITv+9x3J+bBXciRm
07TZ5BSbeCCABzxivHx3szFiSz5oZzNYXM5BkJVOaVtl8OfH98n38C6/WH6VJOIDWfLIpMRO81pUBhWJ
q8s0vVyIJMkvltoy+RVKyi+EWHr6u9GegjC6zKDi62/g4aKry3QOs87OlX+RZCENhpDBB77+WaNxFQit
MmCsoLUSYll7V5PnvbC4oQwk2mLlZBMgf48m0HJ2ZzBsz/uaIK9d3dRjphun0ED+0TejXnfaKrcrahc0
a2chl9QWIXE2qdGT5TEHigJ7ty/akhYHyLSb23yKtW7NVVewHkCutVGH/1u4QUlrZxT52a3B7MjiYC06
Ci2apPuYwbZ0N3Dvo0fVj0en8RQN1h59pW1haMWQfxuB8LpaR0LY1XGA0jG7zUSM85os46EttuRZSzRT
gKFGqW0FeTpoPUwUyvaiAj3hESODnDXMzp4y91T2hnAG967hIvDeEORk1VngSYOOBXyvB4VEK8nAp8Ch
SEoyINijDQYZS0MZ7ClA/lPn4lxgQ762OuiyTWhoNieWMRbqSZLeUigUrbAxPMFD0JVFc3e10fKaFIg1
WmXIn5RPhB3WNakMrINZj4XZgYbe9zXKa22r8eDppkar4pNeaWPiUQ8CPD8PW84Goz/Rwc9tztCUG82f
1Zx/dC7eZnPelu9Lbc7FczTnUPrDqZ9LO0rPDzlHQUancSDZXqL9CRzbP548Gs/19H2yJqTzqcDJu0KM
NP3WKczLqMejZRrCrtHoykIeGH2U1h3vbun8CchHl7h4tf6ddoKx6ux+eNQlMntdNkyhf3h8fDd3znKi
KEgQWzQNZfArmS21rSF21G67WXr1nVikfYFsp+n8bc8nn9Gsv7LH/RfLfv/wtrfRwP/zNV5jmAZ9xeQv
Xpb8g3zek0/eOx/DfnR9/nM5XaT/mpy+pPYN+vNUeddYde/waymlnN/+vSEJTV/tChqzwY2qxvgGeprj
0eHDwXJ29JPnPwEAAP//dJE0SEsVAAA=
`,
	},

	"/static/ui/tag.ui~": {
		name:    "tag.ui~",
		local:   "static/ui/tag.ui~",
		size:    5334,
		modtime: 1542361170,
		compressed: `
H4sIAAAAAAAC/+RYTXPjNgy951ew6LGjyFZm2k5H0s70Y7eHTi/dnjUQCctsaFIlITv+9x3JiT9WcmRl
00zdzSk28UAAD3jEOH33sDJiTT5oZzOY385AkJVOaVtl8OfH99H38C6/Sb+KIvGBLHlkUmKjeSkqg4rE
3W2S3M5FFOU3qbZMfoGS8hshUk9/N9pTEEaXGVR8/w0cLrq7TWYQd3au/IskC2kwhAw+8P3PGo2rQGiV
AWMFrZUQae1dTZ63wuKKMpBoi4WTTYD8PZpAafxkMGzP25ogr13d1GOmK6fQQP7RN6NeN9oqtylqFzRr
ZyGX1BYhcjaq0ZPlMQeKAnu3LdqSFjvIZTe3+RRL3ZqrrmA9gFxqo3b/t3CDkpbOKPLxo0F8ZLGzFh2F
Fk3UfcxgXboH2PvoUfXj0el0igZrj77StjC0YMi/nYDwulpOhLCrpwFKx+xWF2Kc12QZd22xJs9aorkE
GGqU2laQJ4PWw0ShbC8q0BMeMTLIWcPs7ClzL2VvCGdw6xouAm8NQU5WnQWeNOhYwHs9KCRaSQY+BQ5F
UpIBwR5tMMhYGspgSwHynzoX5wIb8rXWQZdtQkOzeWEZp0I9SdJrCoWiBTaGL/AQdGXRPF1ttLwnBWKJ
VhnyJ+UTYYN1TSoD6yDusRDvaOh9X6O817YaD54earRqetILbcx01EGAZ+dhaTwY/YkOfm5zhqZcaf6s
5vyjc/FlNudj+f6vzTl/jeYcSn849XNpT9LzXc6TIKPTOJBsL9H+BI7tHy8ejdd6+j5ZE5LZpcCLd4Up
0vRbpzBvox7PlmkIu0SjKwt5YPSTtO54d0tmL0A+u8RNV+vfaSMYq87uh2ddIrPXZcMU+ofHx09z5yxH
ioIEsUbTUAa/kllT2xpiQ+22myV334l50hfIdprO3/Z68jmZ9St73H+x7LeHt72NBv4Lr/EVMzh/WwZ3
GrhnkLx3Hq5A2ebJv6ZsbylDg/48Vd41Vu0dfi2llLPHvy9IzZKr3QanLFOjsz++DJ7meHR4OEjjo18f
/wkAAP//bXVqaNYUAAA=
`,
	},

	"/static/ui/vault.ui": {
		name:    "vault.ui",
		local:   "static/ui/vault.ui",
		size:    25383,
		modtime: 1542555746,
		compressed: `
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
`,
	},

	"/static/ui/vault.ui~": {
		name:    "vault.ui~",
		local:   "static/ui/vault.ui~",
		size:    25375,
		modtime: 1542555746,
		compressed: `
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
`,
	},

	"/static/ui": {
		name:  "ui",
		local: `static/ui`,
		isDir: true,
	},
}

var _escDirs = map[string][]os.FileInfo{

	"static/ui": {
		_escData["/static/ui/app.ui"],
		_escData["/static/ui/app.ui~"],
		_escData["/static/ui/sign.ui"],
		_escData["/static/ui/sign.ui~"],
		_escData["/static/ui/tag.ui"],
		_escData["/static/ui/tag.ui~"],
		_escData["/static/ui/vault.ui"],
		_escData["/static/ui/vault.ui~"],
	},
}
